{% load static %}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ friend_username }}'s Profile</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 20px;
        }

        .container {
            max-width: 800px;
        }

        .back-button {
            background: rgba(255, 255, 255, 0.2);
            color: white;
            border: 1px solid rgba(255, 255, 255, 0.3);
            padding: 10px 20px;
            border-radius: 25px;
            text-decoration: none;
            font-weight: 500;
            margin-bottom: 20px;
            display: inline-block;
            transition: all 0.3s ease;
        }

        .back-button:hover {
            background: rgba(255, 255, 255, 0.3);
            color: white;
            text-decoration: none;
        }

        .profile-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            margin-bottom: 30px;
        }

        .profile-header {
            background: linear-gradient(45deg, #007bff, #6f42c1);
            color: white;
            padding: 40px;
            text-align: center;
            position: relative;
        }

        .profile-info {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .profile-avatar {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            object-fit: cover;
            border: 5px solid white;
            margin-bottom: 20px;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
        }

        .profile-avatar-placeholder {
            width: 120px;
            height: 120px;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.2);
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 48px;
            font-weight: bold;
            color: white;
            border: 5px solid white;
            margin-bottom: 20px;
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
        }

        .profile-name {
            font-size: 32px;
            font-weight: bold;
            margin-bottom: 10px;
        }

        .profile-bio {
            font-size: 16px;
            opacity: 0.9;
            margin-bottom: 20px;
            max-width: 600px;
            line-height: 1.5;
        }

        .stats {
            display: flex;
            gap: 40px;
            margin-bottom: 20px;
        }

        .stat {
            text-align: center;
        }

        .stat-number {
            font-size: 24px;
            font-weight: bold;
            display: block;
        }

        .stat-label {
            font-size: 14px;
            opacity: 0.8;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .profile-actions {
            display: flex;
            gap: 10px;
            margin-top: 20px;
        }

        .date-request-btn {
            background: #28a745;
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 25px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s ease;
            box-shadow: 0 4px 8px rgba(40, 167, 69, 0.2);
            text-decoration: none;
            display: inline-block;
        }

        .date-request-btn:hover {
            background: #218838;
            color: white;
            text-decoration: none;
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(40, 167, 69, 0.3);
        }

        .date-request-btn:disabled {
            background: #6c757d;
            cursor: not-allowed;
            transform: none;
            box-shadow: none;
        }

        /* Posts Section Styles */
        .posts-section {
            background: white;
            border-radius: 12px;
            padding: 30px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
            border: 1px solid #e9ecef;
        }

        .posts-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
        }

        .posts-title {
            font-size: 24px;
            font-weight: bold;
            color: #212529;
        }

        .posts-count {
            color: #6c757d;
            font-size: 14px;
        }

        .post-card {
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 12px;
            margin-bottom: 20px;
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .post-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .post-header {
            display: flex;
            align-items: center;
            padding: 15px;
            border-bottom: 1px solid #e9ecef;
        }

        .post-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            object-fit: cover;
            margin-right: 12px;
        }

        .post-avatar-placeholder {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: #007bff;
            color: white;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            margin-right: 12px;
        }

        .post-author-info {
            flex: 1;
        }

        .post-author {
            font-weight: bold;
            color: #212529;
            margin-bottom: 2px;
        }

        .post-time {
            color: #6c757d;
            font-size: 12px;
        }

        .post-content {
            padding: 20px;
        }

        .post-text {
            color: #212529;
            line-height: 1.6;
            margin-bottom: 15px;
        }

        .post-image {
            width: 100%;
            max-height: 400px;
            object-fit: cover;
            border-radius: 8px;
        }

        .post-actions {
            display: flex;
            padding: 15px;
            border-top: 1px solid #e9ecef;
            gap: 20px;
        }

        .post-action-btn {
            background: none;
            border: none;
            color: #6c757d;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 8px 12px;
            border-radius: 20px;
            transition: all 0.3s ease;
            font-size: 14px;
        }

        .post-action-btn:hover {
            background: #f8f9fa;
            color: #007bff;
        }

        /* Like button specific styles */
        .post-action-btn.liked {
            color: #e74c3c;
        }

        /* Like Animation Styles */
        .post-action-btn.like-animation {
            animation: likeAnimation 0.4s ease-in-out;
        }

        @keyframes likeAnimation {
            0% {
                transform: scale(1);
            }
            50% {
                transform: scale(1.2);
            }
            100% {
                transform: scale(1);
            }
        }

        /* Heart bounce animation for extra effect */
        .post-action-btn .heart-bounce {
            animation: heartBounce 0.3s ease-in-out;
        }

        @keyframes heartBounce {
            0% {
                transform: scale(1);
            }
            25% {
                transform: scale(1.3);
            }
            50% {
                transform: scale(1.1);
            }
            75% {
                transform: scale(1.2);
            }
            100% {
                transform: scale(1);
            }
        }

        .no-posts {
            text-align: center;
            color: #6c757d;
            padding: 60px 20px;
            font-size: 18px;
        }

        /* Responsive design */
        @media (max-width: 768px) {
            .container {
                padding: 10px;
            }

            .stats {
                gap: 20px;
            }

            .profile-actions {
                flex-direction: column;
                align-items: center;
            }

            .posts-section {
                padding: 20px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Back Button -->
        <a href="{% url 'search_user' %}" class="back-button">
            ‚Üê Back to Friends
        </a>

        <!-- Profile Card -->
        <div class="profile-card">
            <div class="profile-header">
                <div class="profile-info">
                    {% if friend_profile_picture %}
                        <img src="{{ friend_profile_picture }}" alt="{{ friend_username }}" class="profile-avatar">
                    {% else %}
                        <div class="profile-avatar-placeholder">{{ friend_username|first|upper|default:"U" }}</div>
                    {% endif %}
                    
                    <h1 class="profile-name">{{ friend_username }}</h1>
                    <div class="profile-bio">{{ friend_bio }}</div>
                    
                    <div class="stats">
                        <div class="stat">
                            <div class="stat-number">{{ post_count|default:0 }}</div>
                            <div class="stat-label">posts</div>
                        </div>
                        <div class="stat">
                            <div class="stat-number">{{ friend_friend_count|default:0 }}</div>
                            <div class="stat-label">friends</div>
                        </div>
                    </div>
                    
                    <!-- Send Date Request Button -->
                    <div class="profile-actions">
                        {% if has_pending_date_request %}
                            <button class="date-request-btn" disabled>
                                üìÖ Date Request Pending
                            </button>
                        {% else %}
                            <button class="date-request-btn" data-toggle="modal" data-target="#dateRequestModal" data-friendid="{{ friend_username }}">
                                üíï Send Date Request
                            </button>
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>

        <!-- Posts Section -->
        <div class="posts-section">
            <div class="posts-header">
                <h3 class="posts-title">{{ friend_username }}'s Posts</h3>
                <span class="posts-count">{{ post_count|default:0 }} total</span>
            </div>

            <!-- Posts Container -->
            <div id="postsContainer">
                {% if friend_posts %}
                    {% for post in friend_posts %}
                        <div class="post-card">
                            <div class="post-header">
                                {% if friend_profile_picture %}
                                    <img src="{{ friend_profile_picture }}" alt="{{ friend_username }}" class="post-avatar">
                                {% else %}
                                    <div class="post-avatar-placeholder">{{ friend_username|first|upper|default:"U" }}</div>
                                {% endif %}
                                <div class="post-author-info">
                                    <div class="post-author">{{ friend_username }}</div>
                                    <div class="post-time">{{ post.created_at_formatted|default:"Recently" }}</div>
                                </div>
                            </div>

                            <div class="post-content">
                                {% if post.content %}
                                <div class="post-text">{{ post.content }}</div>
                                {% endif %}

                                {% if post.image %}
                                <img src="{{ post.image }}" alt="Post image" class="post-image">
                                {% endif %}
                            </div>

                            <div class="post-actions">
                                <!-- Updated Like Button with Privacy Logic -->
                                <button class="post-action-btn like-btn {% if post.user_liked %}liked{% endif %}" 
                                        data-post-id="{{ post.id }}" 
                                        data-show-count="{{ post.show_like_count|yesno:"true,false" }}">
                                    <span>‚ù§Ô∏è</span>
                                    {% if post.show_like_count %}
                                        <span class="like-count">{{ post.likes|default:0 }}</span>
                                    {% else %}
                                        <span class="like-count" style="display: none;">0</span>
                                    {% endif %}
                                </button>
                                <!-- Comments button removed as requested -->
                            </div>
                        </div>
                    {% endfor %}
                {% else %}
                    <div class="no-posts">
                        {{ friend_username }} hasn't posted anything yet.
                    </div>
                {% endif %}
            </div>
        </div>
    </div>

    <!-- Date Request Modal -->
    <div class="modal fade" id="dateRequestModal" tabindex="-1" role="dialog" aria-labelledby="dateRequestModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <form method="POST" action="{% url 'send_date_request' %}">
                    {% csrf_token %}
                    <div class="modal-header">
                        <h5 class="modal-title" id="dateRequestModalLabel">Send Date Request to {{ friend_username }}</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" name="friend_id" id="friendIdInput" value="{{ friend_username }}">
                        <input type="hidden" name="latitude" id="latitudeInput">
                        <input type="hidden" name="longitude" id="longitudeInput">
                        
                        <div class="form-group">
                            <label for="dateInput">Select Date:</label>
                            <input type="date" class="form-control" name="date" id="dateInput" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="timeInput">Select Time:</label>
                            <input type="time" class="form-control" name="time" id="timeInput" required>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Send Request</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS and dependencies -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        // CSRF token helper function
        function getCookie(name) {
            let cookieValue = null;
            if (document.cookie && document.cookie !== '') {
                const cookies = document.cookie.split(';');
                for (let i = 0; i < cookies.length; i++) {
                    const cookie = cookies[i].trim();
                    if (cookie.substring(0, name.length + 1) === (name + '=')) {
                        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                        break;
                    }
                }
            }
            return cookieValue;
        }

        // Updated Like functionality with Privacy Support and Animation
        document.querySelectorAll('.like-btn').forEach(btn => {
            btn.addEventListener('click', function() {
                const postId = this.dataset.postId;
                const showCount = this.dataset.showCount === 'true';
                const heartIcon = this.querySelector('span:first-child'); // Get the heart emoji
                
                // Add animation classes immediately for instant feedback
                this.classList.add('like-animation');
                heartIcon.classList.add('heart-bounce');
                
                // Remove animation classes after animation completes
                setTimeout(() => {
                    this.classList.remove('like-animation');
                    heartIcon.classList.remove('heart-bounce');
                }, 400); // Match the animation duration
                
                fetch('/toggle_like/', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-CSRFToken': getCookie('csrftoken')
                    },
                    body: JSON.stringify({post_id: postId})
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Only update like count if user is allowed to see it
                        if (showCount) {
                            const likeCount = this.querySelector('.like-count');
                            likeCount.textContent = data.likes;
                        }
                        
                        // Always toggle the visual liked state (heart color)
                        if (data.liked) {
                            this.classList.add('liked');
                        } else {
                            this.classList.remove('liked');
                        }
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    // Remove animation classes even if there's an error
                    this.classList.remove('like-animation');
                    heartIcon.classList.remove('heart-bounce');
                });
            });
        });

        // Handle Date Request Modal (preserved from original)
        $('#dateRequestModal').on('show.bs.modal', function (event) {
            var button = $(event.relatedTarget);
            var friendId = button.data('friendid');
            var modal = $(this);
            modal.find('#friendIdInput').val(friendId);
            
            // Get user's current location
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    modal.find('#latitudeInput').val(position.coords.latitude);
                    modal.find('#longitudeInput').val(position.coords.longitude);
                });
            }
        });
    </script>
</body>
</html>